[vite] connecting... client:789:9
[vite] connected. client:912:15
Video stream ready for recording: 
Object { streamId: "{bf363c47-ac20-4ded-8d81-dda39fecf73c}", active: true, videoTracks: 1, audioTracks: 0 }
+page.svelte:516:11
Initializing optimized MediaPipe with config: 
Object { width: 2144, height: 955, downsampleFactor: 0.5, useGPU: true, modelComplexity: 0, enableOptimizations: true }
WebcamNative.svelte:174:12
Trying MediaPipe initialization with CDN: https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.5.1675471629 mediaPipeService.ts:112:15
Hardware capabilities: 
Object { supportsGPU: true, supportsWASM: true }
mediaPipeService.ts:177:13
MediaPipe settings: GPU=true, Model Complexity=0 mediaPipeService.ts:188:11
Downsampling enabled: 2144x955 -> 1072x478 mediaPipeService.ts:266:15
MediaPipe initialization completed with optimizations WebcamNative.svelte:191:14
GameService.updateGameMode() called: 
Object { oldMode: "hips-sway", newMode: "hips-sway", willReset: false }
gameService.ts:1438:13
No mode change, skipping state reset gameService.ts:1450:15
Uncaught (in promise) DOMException: The fetching process for the media resource was aborted by the user agent at the user's request.
    O http://localhost:5173/node_modules/.vite/deps/@mediapipe_camera_utils.js?v=cfc7cffb:440
    node_modules mediapipe/camera_utils/camera_utils.js/</N.prototype.start/</<@http://localhost:5173/node_modules/.vite/deps/@mediapipe_camera_utils.js?v=cfc7cffb:424
@mediapipe_camera_utils.js:440
I0000 00:00:1755098341.001000       1 gl_context_webgl.cc:151] Successfully created a WebGL context with major version 3 and handle 3 client.js:2976:15
I0000 00:00:1755098341.002000       1 gl_context.cc:359] GL version: 3.0 (OpenGL ES 3.0 (WebGL 2.0)) client.js:2976:15
W0000 00:00:1755098341.004000       1 gl_context.cc:1000] OpenGL error checking is disabled client.js:2976:15
🔍 Performance Breakdown:
        📊 FPS: 0 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 0.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ✅ MediaPipe inference OK
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
WebGL warning: drawArraysInstanced: Tex image TEXTURE_2D level 0 is incurring lazy initialization. 8
🔍 Performance Breakdown:
        📊 FPS: 7 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 148.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 121.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 111.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 102.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 101.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 119.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 126.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 102.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 115.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 122.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 10 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 102.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 10 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 103.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 141.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 126.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 104.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 125.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 96.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 153.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
Game mode changed to: hands-fixed +page.svelte:461:11
GameService.updateGameMode() called: 
Object { oldMode: "hips-sway", newMode: "hands-fixed", willReset: true }
gameService.ts:1438:13
Game state reset due to mode change gameService.ts:1446:15
Generated fixedTargets for hands game after mode change: 
Object { count: 16, firstTarget: {…}, firstTargetId: "neutral_figure8_001" }
gameService.ts:1458:17
After state reset and target regeneration - fixedTargets length: 16 gameService.ts:1448:15
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 163.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
Starting 15-second countdown for manual game +page.svelte:297:11
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 126.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 105.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 116.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 111.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 158.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 100.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 120.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 137.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 120.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 137.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 10 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 101.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
GameService.startGame() called for mode: hands-fixed gameService.ts:348:13
Initializing HANDS_FIXED game mode gameService.ts:381:17
Hands centering state after init: 
Object { phase: "centering", currentTrial: 1, primaryHand: null, activeHand: null, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:390:17
Generated fixedTargets for hands game: 
Object { count: 16, firstTarget: {…}, firstTargetId: "neutral_figure8_001" }
gameService.ts:400:17
Game started! 
Object { score: 0, scoreBreakdown: {…} }
+page.svelte:543:11
Game started after countdown +page.svelte:291:14
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: false, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: false, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: false, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: false, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: false, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: false, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: false, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: false, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: false, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 97.0ms
        🎯 Game Logic: 0.2ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: false, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: false, bothHandsCentered: false, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: true, bothHandsCentered: true, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
Trial 1: Started centering timer at 1755098375567 gameService.ts:624:23
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: true, bothHandsCentered: true, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
Trial 1: Centering duration: 144 ms, required: 1000 ms gameService.ts:627:23
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: true, bothHandsCentered: true, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
Trial 1: Centering duration: 264 ms, required: 1000 ms gameService.ts:627:23
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: true, bothHandsCentered: true, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
Trial 1: Centering duration: 374 ms, required: 1000 ms gameService.ts:627:23
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: true, bothHandsCentered: true, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
Trial 1: Centering duration: 479 ms, required: 1000 ms gameService.ts:627:23
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 120.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: true, bothHandsCentered: true, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
Trial 1: Centering duration: 599 ms, required: 1000 ms gameService.ts:627:23
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: true, bothHandsCentered: true, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
Trial 1: Centering duration: 707 ms, required: 1000 ms gameService.ts:627:23
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: true, bothHandsCentered: true, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
Trial 1: Centering duration: 826 ms, required: 1000 ms gameService.ts:627:23
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: true, bothHandsCentered: true, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
Trial 1: Centering duration: 952 ms, required: 1000 ms gameService.ts:627:23
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 1 }
gameService.ts:597:13
Trial 1 hands centering debug: 
Object { leftHandCentered: true, rightHandCentered: true, bothHandsCentered: true, leftCenter: {…}, rightCenter: {…}, tolerance: 80 }
gameService.ts:612:19
Trial 1: Centering duration: 1083 ms, required: 1000 ms gameService.ts:627:23
Trial 1: Centering successful! Moving to targeting phase gameService.ts:629:25
Set phase to targeting: 
Object { phase: "targeting", currentFixedTargetIndex: 1, hasTarget: true, targetId: "neutral_figure8_001", fixedTargetsLength: 16, fixedTargets0: {…} }
gameService.ts:640:25
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: null, activeHand: null }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: null, activeHand: null }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: null, activeHand: null }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 125.0ms
        🎯 Game Logic: 0.3ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: null, activeHand: null }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: null, activeHand: null }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: null, activeHand: null }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: null, activeHand: null }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: null, activeHand: null }
gameService.ts:1014:13
Primary hand detected on first target: LEFT gameService.ts:1053:17
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 2, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 2, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: false, leftCount: 21, rightCount: 0, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 2, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 129.0ms
        🎯 Game Logic: 0.2ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: false, leftCount: 21, rightCount: 0, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 2, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: false, leftCount: 21, rightCount: 0, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 2, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 2, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 3, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 3, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 4, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 4, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 4, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 4, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 148.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 5, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 5, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 6, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 6, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 6, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 6, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 7, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 7, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 120.0ms
        🎯 Game Logic: 0.4ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 8, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 8, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 8, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 9, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 9, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 9, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 9, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 9, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 115.0ms
        🎯 Game Logic: 0.5ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 9, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 10, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 10, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: false, leftCount: 21, rightCount: 0, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 10, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 10, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: false, leftCount: 21, rightCount: 0, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 10, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 11, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 11, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 11, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 139.0ms
        🎯 Game Logic: 0.4ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 12, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: false, leftCount: 21, rightCount: 0, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 12, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 13, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 13, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 13, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 13, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 13, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 14, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 14, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 109.0ms
        🎯 Game Logic: 0.0ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 15, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 16, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 16, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 1 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 1, hasCurrentTarget: true, currentFixedTargetIndex: 16, primaryHand: "left", activeHand: "left" }
gameService.ts:1014:13
Trial 1 completed. Starting trial 2 with right hand gameService.ts:1121:15
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: false, leftCount: 21, rightCount: 0, currentPhase: "centering", currentTrial: 2 }
gameService.ts:597:13
Trial 2 recentering debug: 
Object { activeHand: "right", activeHandCentered: false, centerX: 643.2, centerY: 477.5, tolerance: 80 }
gameService.ts:676:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: false, leftCount: 21, rightCount: 0, currentPhase: "centering", currentTrial: 2 }
gameService.ts:597:13
Trial 2 recentering debug: 
Object { activeHand: "right", activeHandCentered: false, centerX: 643.2, centerY: 477.5, tolerance: 80 }
gameService.ts:676:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 2 }
gameService.ts:597:13
Trial 2 recentering debug: 
Object { activeHand: "right", activeHandCentered: true, centerX: 643.2, centerY: 477.5, tolerance: 80 }
gameService.ts:676:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 2 }
gameService.ts:597:13
Trial 2 recentering debug: 
Object { activeHand: "right", activeHandCentered: true, centerX: 643.2, centerY: 477.5, tolerance: 80 }
gameService.ts:676:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 2 }
gameService.ts:597:13
Trial 2 recentering debug: 
Object { activeHand: "right", activeHandCentered: true, centerX: 643.2, centerY: 477.5, tolerance: 80 }
gameService.ts:676:19
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 127.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 2 }
gameService.ts:597:13
Trial 2 recentering debug: 
Object { activeHand: "right", activeHandCentered: true, centerX: 643.2, centerY: 477.5, tolerance: 80 }
gameService.ts:676:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 2 }
gameService.ts:597:13
Trial 2 recentering debug: 
Object { activeHand: "right", activeHandCentered: true, centerX: 643.2, centerY: 477.5, tolerance: 80 }
gameService.ts:676:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 2 }
gameService.ts:597:13
Trial 2 recentering debug: 
Object { activeHand: "right", activeHandCentered: true, centerX: 643.2, centerY: 477.5, tolerance: 80 }
gameService.ts:676:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 2 }
gameService.ts:597:13
Trial 2 recentering debug: 
Object { activeHand: "right", activeHandCentered: true, centerX: 643.2, centerY: 477.5, tolerance: 80 }
gameService.ts:676:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 2 }
gameService.ts:597:13
Trial 2 recentering debug: 
Object { activeHand: "right", activeHandCentered: true, centerX: 643.2, centerY: 477.5, tolerance: 80 }
gameService.ts:676:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 2 }
gameService.ts:597:13
Trial 2 recentering debug: 
Object { activeHand: "right", activeHandCentered: true, centerX: 643.2, centerY: 477.5, tolerance: 80 }
gameService.ts:676:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "centering", currentTrial: 2 }
gameService.ts:597:13
Trial 2 recentering debug: 
Object { activeHand: "right", activeHandCentered: true, centerX: 643.2, centerY: 477.5, tolerance: 80 }
gameService.ts:676:19
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 103.0ms
        🎯 Game Logic: 0.2ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 1, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 2, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 2, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 126.0ms
        🎯 Game Logic: 0.2ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 2, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 2, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 2, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 2, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 3, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 3, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 3, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 4, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 4, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 116.0ms
        🎯 Game Logic: 0.4ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 5, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 5, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 5, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 5, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 5, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 6, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 6, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 7, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 122.0ms
        🎯 Game Logic: 0.3ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 7, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 7, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 7, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 7, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: false, hasRightHand: true, leftCount: 0, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 8, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 8, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 8, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 8, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 8, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 110.0ms
        🎯 Game Logic: 0.4ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 9, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 9, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 9, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 9, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 9, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 10, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 10, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 10, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 10, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 116.0ms
        🎯 Game Logic: 0.3ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 11, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 11, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 11, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 12, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 12, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 13, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 13, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 13, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 13, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 128.0ms
        🎯 Game Logic: 0.2ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: true
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 13, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 14, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 14, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 15, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 15, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
checkHandsCenteringCollisions called with: 
Object { hasLeftHand: true, hasRightHand: true, leftCount: 21, rightCount: 21, currentPhase: "targeting", currentTrial: 2 }
gameService.ts:597:13
Hands targeting phase - checking for target collisions gameService.ts:721:17
checkHandSpecificTargetCollisions called: 
Object { phase: "targeting", currentTrial: 2, hasCurrentTarget: true, currentFixedTargetIndex: 16, primaryHand: "left", activeHand: "right" }
gameService.ts:1014:13
Both hand trials completed gameService.ts:1136:15
Game completed, dispatching gameEnded event WebcamNative.svelte:326:13
Game ended! 
Object { finalScore: 320, scoreBreakdown: {…} }
+page.svelte:559:11
Manual mode: Game completed, deactivating game button +page.svelte:570:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 112.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 120.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 156.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 118.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 110.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 101.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 124.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 108.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 117.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 7 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 152.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 134.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 122.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 98.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 101.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 7 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 139.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 138.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 124.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 95.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 93.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 7 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 162.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 137.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 135.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 113.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 102.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 107.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 105.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 112.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 107.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 114.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 10 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 103.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 10 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 99.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 103.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 94.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 122.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 130.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 105.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 127.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 124.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 10 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 99.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 10 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 117.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 8 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 107.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 92.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 9 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 97.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
🔍 Performance Breakdown:
        📊 FPS: 10 (Target: 30+ for smooth experience)
        🧠 MediaPipe Inference: 113.0ms
        🎯 Game Logic: 0.1ms
        ⚙️  Model Complexity: 0 (0=fastest, 2=most accurate)
        📉 Downsampling: 0.5x (lower = faster)
        🎮 Game Active: false
        💾 GPU Enabled: true
        
        💡 Bottleneck Analysis:
        ⚠️  MediaPipe inference is slow (>80ms)
        ✅ Game logic OK
        🔴 FPS critically low WebcamNative.svelte:274:12
